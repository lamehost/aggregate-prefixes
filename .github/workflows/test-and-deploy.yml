name: Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --no-interaction --no-ansi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 aggregate_prefixes tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          poetry run flake8 aggregate_prefixes tests --count --exit-zero --max-complexity=10 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest

  Build:
    runs-on: ubuntu-latest
    needs:
      - Test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install pypa/build
        run: python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  Publish-to-Pypi:
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - Build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/aggregate-prefixes
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4.1.7
        with:
          name: python-package-distributions
          path: dist/
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  Release-on-GitHub:
    if: startsWith(github.ref, 'refs/tags/')  # only publish to Github on tag pushes
    needs:
      - Build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4.1.7
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: ./dist/*.tar.gz ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
